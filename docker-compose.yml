version: '3'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    volumes:
      - postgres_data:/db/data
    env_file:
      - .env

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command:
      [
        "gunicorn",
        "core.asgi:application",
        "-k",
        "uvicorn.workers.UvicornWorker",
        "-b",
        "0.0.0.0:8000",
        "--timeout",
        "40",
        "--capture-output",
      ]
    volumes:
      - ./src:/code/src
      - ./src/manage.py:/code/manage.py
      - static_volume:/code/static
      - media_volume:/code/media
    depends_on:
      - db
      - redis
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.nextjs
    volumes:
      - media_volume:/app/public/media
    depends_on:
      - web

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./cloudflare.ini:/etc/cloudflare/cloudflare.ini:ro
      - static_volume:/static
      - media_volume:/media
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    depends_on:
      - web
      - frontend

  redis:
    image: redis:latest

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: ["celery", "-A", "core", "worker", "-l", "INFO"]
    volumes:
      - ./src:/code/src
      - ./src/manage.py:/code/manage.py
      - media_volume:/code/media
    depends_on:
      - db
      - redis
      - web
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - .env
    mem_limit: 2g

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
      - ./cloudflare.ini:/etc/cloudflare/cloudflare.ini:ro
    command: certonly --webroot -w /var/www/certbot --email michalskibinski109@gmail.com -d sejm-stats.pl -d www.sejm-stats.pl --rsa-key-size 4096 --agree-tos --force-renewal --dns-cloudflare --dns-cloudflare-credentials /etc/cloudflare/cloudflare.ini

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certbot_www:
  certbot_conf: